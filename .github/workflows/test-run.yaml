name: 'test:run'

on:
  workflow_dispatch:
    inputs:
      runsOn:
        description: 'OS (ubuntu-latest, macos-latest, windows-latest, ...)'
        type: string
        default: ubuntu-latest
      nodeVersion:
        description: 'Node (* for latest or 20, 18, ...)'
        type: string
        default: '*'
      testUnit:
        description: 'Units'
        type: choice
        options:
          - skip
          - test
          - test-with-coverage
        default: test
      testIntegration:
        description: 'Integrations'
        type: choice
        options:
          - skip
          - test
        default: test
      testTsd:
        description: 'Definitions'
        type: choice
        options:
          - skip
          - test
        default: test

  workflow_call:
    inputs:
      runsOn:
        type: string
        default: ubuntu-latest
      nodeVersion:
        type: string
        default: '*'
      testUnit:
        type: string
        default: skip
      testIntegration:
        type: string
        default: skip
      testTsd:
        type: string
        default: skip

jobs:
  unit:
    name: 'Unit: ${{ inputs.testUnit }}'
    if: ${{ inputs.testUnit != 'skip' }}
    runs-on: ${{ inputs.runsOn }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.3
        with:
          check-latest: true
          node-version: ${{ inputs.nodeVersion }}
      - uses: bahmutov/npm-install@v1.10.2

      - if: ${{ inputs.testUnit == 'test' }}
        run: npm run test:unit

      - if: ${{ inputs.testUnit == 'test-with-coverage' }}
        run: npm run coverage

      - if: ${{ success() && inputs.testUnit == 'test-with-coverage' }}
        continue-on-error: true
        uses: codecov/codecov-action@v4.5.0
        with:
          file: ./coverage.lcov

  integration:
    name: 'Unit: ${{ inputs.testIntegration }}'
    if: ${{ inputs.testIntegration != 'skip' }}
    runs-on: ${{ inputs.runsOn }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.3
        with:
          check-latest: true
          node-version: ${{ inputs.nodeVersion }}
      - uses: bahmutov/npm-install@v1.10.2

      - name: Setup sudoless tcpdump (linux only)
        if: ${{ success() && startsWith(inputs.runsOn, 'ubuntu-') }}
        run: |
          sudo groupadd pcap
          sudo usermod -a -G pcap $USER
          sudo chgrp pcap /usr/bin/tcpdump
          sudo setcap cap_net_raw,cap_net_admin=eip /usr/bin/tcpdump

      - name: Setup sudoless tcpdump (macos only)
        if: ${{ success() && startsWith(inputs.runsOn, 'macos-') }}
        run: |
          sudo chown $(whoami):admin /dev/bpf*

      - run: npm run test:integration

  tsd:
    name: 'TDS: ${{ inputs.testTsd }}'
    if: ${{ inputs.testTsd != 'skip' }}
    runs-on: ${{ inputs.runsOn }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.3
        with:
          check-latest: true
          node-version: ${{ inputs.nodeVersion }}
      - uses: bahmutov/npm-install@v1.10.2

      - run: npm run test:tsd
