name: PR

on:
  pull_request:
    branches:
      - master

jobs:
  lint-commit-message:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/setup-node@v2
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: bahmutov/npm-install@v1
      - uses: wagoid/commitlint-github-action@v1
        env:
          NODE_PATH: ${{ github.workspace }}/node_modules

  test-tsd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2
      - uses: actions/checkout@v2
      - uses: bahmutov/npm-install@v1
      - run: npm run test:tsd

  test-coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v2
      - uses: actions/checkout@v2
      - uses: bahmutov/npm-install@v1
      - uses: artiomtr/jest-coverage-report-action@v2.0-rc.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-step: install
          package-manager: npm
          test-script: npm run test:coverage -- --silent --ci --coverage --coverageReporters="text" --coverageReporters="text-summary"

  test-jest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node: # https://nodejs.org/en/about/releases/
          - '*' # Current
          - '14' # Active LTS
          - '12' # Maintenance LTS
      fail-fast: false

    steps:
      - name: Setup sudoless tcpdump (linux only)
        if: ${{ success() && startsWith(matrix.os, 'ubuntu-') }}
        run: |
          sudo groupadd pcap
          sudo usermod -a -G pcap $USER
          sudo chgrp pcap /usr/sbin/tcpdump
          sudo setcap cap_net_raw,cap_net_admin=eip /usr/sbin/tcpdump
          sudo ln -s /usr/sbin/tcpdump /usr/bin/tcpdump

      - name: Setup sudoless tcpdump (macos only)
        if: ${{ success() && startsWith(matrix.os, 'macos-') }}
        run: |
          sudo chown $(whoami):admin /dev/bpf*

      - uses: actions/setup-node@v2
        with:
          check-latest: true
          node-version: ${{ matrix.node }}

      - uses: actions/checkout@v2
      - uses: bahmutov/npm-install@v1

      - run: npm run jest -- --ci --no-coverage --reporters=default --reporters=jest-junit --reporters=jest-github-actions-reporter
      - uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: jest/node-${{ matrix.node }}/${{ matrix.os }}  # Name of the check run which will be created
          path: reports/jest-*.xml # Path to test results
          reporter: jest-junit # Format of test results
