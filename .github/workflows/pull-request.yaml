name: PR

on:
  pull_request:
    branches:
      - master

jobs:
  report-dependency-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Check for new dependencies
        uses: hiwelo/new-dependencies-action@1.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  lint-commit-message:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Setup Node
        uses: actions/setup-node@v2-beta

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: lint-commit-messages-npm-cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-${{ matrix.os }}-${{ matrix.node }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-build-${{ env.cache-name }}-
            npm-${{ runner.os }}-build-
            npm-${{ runner.os }}-
            npm-

      - name: Install dependencies
        run: |
          npm i --only=dev --prefer-offline --no-audit
          npm list --depth=0 || true

      - name: Add dependencies for commitlint action
        run: echo "::set-env name=NODE_PATH::$GITHUB_WORKSPACE/node_modules"

      - name: Lint Commit Messages
        uses: wagoid/commitlint-github-action@v1

  test-tsd:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node
        uses: actions/setup-node@v2-beta

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: test-tsd-npm-cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-build-${{ env.cache-name }}-
            npm-${{ runner.os }}-build-
            npm-${{ runner.os }}-
            npm-

      - name: Install dependencies
        run: |
          npm i --only=dev --prefer-offline --no-audit
          npm list --depth=0 || true

      - name: Test TypeScript definitions
        run: npm run test:tsd

  test-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Node
        uses: actions/setup-node@v2-beta

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: test-coverage-npm-cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-build-${{ env.cache-name }}-
            npm-${{ runner.os }}-build-
            npm-${{ runner.os }}-
            npm-

      - name: Install dependencies (full)
        run: |
          npm i --prefer-offline --no-audit
          npm list --depth=0 || true

      - name: Coverage
        run: npm run coverage

      - name: Coverage Upload
        continue-on-error: true
        if: ${{ success() }}
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.lcov

  test-integration:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        node: # https://nodejs.org/en/about/releases/
          - '*' # Current
          - '12' # Active LTS
          - '10' # Maintenance LTS
      fail-fast: false

    steps:
      - name: Setup sudoless tcpdump (linux only)
        if: ${{ success() && startsWith(matrix.os, 'ubuntu-') }}
        run: |
          sudo groupadd pcap
          sudo usermod -a -G pcap $USER
          sudo chgrp pcap /usr/sbin/tcpdump
          sudo setcap cap_net_raw,cap_net_admin=eip /usr/sbin/tcpdump
          sudo ln -s /usr/sbin/tcpdump /usr/bin/tcpdump

      - name: Setup sudoless tcpdump (macos only)
        if: ${{ success() && startsWith(matrix.os, 'macos-') }}
        run: |
          sudo chmod o+rw /dev/bpf*

      - name: Setup Node
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: test-integration-matrix-npm-cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-${{ matrix.node }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-${{ matrix.node }}-build-${{ env.cache-name }}-
            npm-${{ runner.os }}-build-${{ env.cache-name }}-
            npm-${{ runner.os }}-build-
            npm-${{ runner.os }}-
            npm-

      - name: Install dependencies (full)
        run: |
          npm i --prefer-offline --no-audit
          npm list --depth=0 || true

      - name: Test (integration)
        run: npm run test:integration

  report-:
    runs-on: ubuntu-latest
    steps:
      - name:
      - name: comment PR
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "Check out this message!"
          check_for_duplicate_msg: false  # OPTIONAL
